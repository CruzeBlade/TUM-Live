{{ define "videosections" }}
    <div x-data="{client: new watch.VideoSectionClient('{{ .ID }}')}">
        <div class="hidden md:block">
            {{ template "videosections-desktop" . }}
        </div>
        <div class="md:hidden">
            {{ template "videosections-mobile" . }}
        </div>
    </div>
{{ end }}

{{ define "videosections-desktop" }}
    <div
        x-data="{vs: new watch.VideoSectionsDesktop()}"
        x-init="await vs.fetch(client); watch.attachCurrentTimeEvent(vs);"
        class="flex pt-3"
    >
        <div class="group relative">
            <div class="flex pb-3">
                <h6 class="text-3 pb-3 pt-2 font-bold"><i class="fa-solid fa-film mr-1"></i>Sections</h6>
                <template x-if="!vs.followSections">
                    <button
                        @click="vs.followSections = true;"
                        class="ml-3 text-xs uppercase text-gray-500 dark:text-gray-400"
                    >
                        Follow sections
                    </button>
                </template>
            </div>
            <div class="relative flex space-x-2">
                <template x-if="vs.showPrev()">
                    <button
                        @click="vs.prev();vs.followSections = false;"
                        class="absolute -left-4 top-0 bottom-0 z-50 my-auto hidden h-fit rounded-lg border bg-white py-2 px-3 text-sm shadow hover:bg-gray-50 group-hover:block dark:border-gray-800 dark:bg-secondary hover:dark:bg-gray-600"
                    >
                        <i class="fa fa-chevron-left text-3"></i>
                    </button>
                </template>
                <template x-if="vs.showNext()">
                    <button
                        @click="vs.next();vs.followSections = false;"
                        class="absolute -right-4 top-0 bottom-0 z-50 my-auto hidden h-fit rounded-lg border bg-white py-2 px-3 text-sm shadow hover:bg-gray-50 group-hover:block dark:border-gray-800 dark:bg-secondary hover:dark:bg-gray-600"
                    >
                        <i class="fa fa-chevron-right text-3"></i>
                    </button>
                </template>
                <template x-for="(s, i) in vs.getList()" :key="s.ID">
                    <button
                        x-cloak
                        class="relative mb-1 flex h-40 w-32 rounded-lg border-0 bg-transparent outline-none"
                        x-data="{previewImgLoaded: false}"
                        @click="watch.jumpTo(s.startHours, s.startMinutes, s.startSeconds); vs.followSections = false;"
                    >
                        <span
                            class="flex h-full w-full flex-col justify-between rounded-lg border bg-white p-1 hover:bg-gray-200 dark:bg-secondary hover:dark:bg-gray-600"
                            :class="vs.isCurrent(i) ? 'border-2 border-blue-500/50' : 'dark:border-gray-800'"
                        >
                            <template x-if="s.fileID !== 0">
                                <img
                                    x-cloak
                                    x-show="previewImgLoaded"
                                    src=""
                                    :src="`/api/download/${s.fileID}?type=serve`"
                                    width="128"
                                    height="32"
                                    @load="previewImgLoaded=true"
                                    alt="preview"
                                    class="z-10 h-16 w-full rounded object-cover"
                                />
                            </template>
                            <span
                                x-show="!previewImgLoaded"
                                class="block h-16 w-full rounded bg-gray-50 dark:bg-gray-700"
                            ></span>
                            <span
                                x-text="s.description"
                                class="text-3 mt-2 mb-auto block px-1 text-left text-xs"
                            ></span>
                            <span class="absolute bottom-1 right-1 px-1 py-1">
                                <span
                                    x-text="s.friendlyTimestamp"
                                    class="ml-auto block w-fit rounded bg-sky-200 p-1 text-xs text-sky-800 dark:bg-indigo-800 dark:text-indigo-200"
                                >
                                </span>
                            </span>
                        </span>
                    </button>
                </template>
            </div>
        </div>
    </div>
{{ end }}

{{ define "videosections-mobile" }}
    <div
        x-data="{vs: new watch.VideoSectionsMobile()}"
        x-init="await vs.fetch(client); watch.attachCurrentTimeEvent(vs);"
        class="pt-3"
    >
        <div class="flex justify-between pb-3">
            <h6 class="text-3 pb-3 pt-2 font-bold"><i class="fa-solid fa-film mr-1"></i>Sections</h6>
            <template x-if="!vs.minimize">
                <button @click="vs.minimize = true;" class="my-auto font-light text-gray-500">Minimize</button>
            </template>
            <template x-if="vs.minimize">
                <button @click="vs.minimize = false;" class="my-auto font-light text-gray-500">Show all</button>
            </template>
        </div>
        <div class="rounded border bg-gray-100 p-1 dark:border-gray-600 dark:bg-gray-400">
            <div class="grid gap-1 overflow-y-scroll" :class="vs.minimize ? 'h-fit' : 'h-56'">
                <template x-for="(s, i) in vs.getList()" :key="s.ID">
                    <button
                        x-cloak
                        class="flex w-full rounded-lg border-0 bg-transparent outline-none"
                        x-data="{previewImgLoaded: false}"
                        @click="watch.jumpTo(s.startHours, s.startMinutes, s.startSeconds)"
                    >
                        <span
                            class="flex w-full justify-between justify-between rounded-lg border bg-white p-1 hover:bg-gray-200 dark:bg-secondary hover:dark:bg-gray-600"
                            :class="vs.isCurrent(i) ? 'border-2 border-blue-500/50' : 'dark:border-gray-800'"
                        >
                            <span class="block">
                                <template x-if="s.fileID !== 0">
                                    <img
                                        x-cloak
                                        x-show="previewImgLoaded"
                                        src=""
                                        :src="`/api/download/${s.fileID}?type=serve`"
                                        width="128"
                                        height="32"
                                        @load="previewImgLoaded=true"
                                        alt="preview"
                                        class="z-10 h-16 w-full rounded object-cover"
                                    />
                                </template>
                                <span x-show="!previewImgLoaded" class="block h-16 w-full rounded bg-gray-50"></span>
                            </span>
                            <span class="block">
                                <span x-text="s.description" class="text-3 my-2 block px-1 text-left text-xs"></span>
                                <span class="flex flex-1 flex-grow items-end px-1 py-1">
                                    <span
                                        x-text="s.friendlyTimestamp"
                                        class="ml-auto block w-fit rounded bg-sky-200 p-1 text-xs text-sky-800 dark:bg-indigo-800 dark:text-indigo-200"
                                    >
                                    </span>
                                </span>
                            </span>
                        </span>
                    </button>
                </template>
            </div>
        </div>
    </div>
{{ end }}
